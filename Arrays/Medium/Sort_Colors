75. Sort Colors
Medium
16.5K
570
Companies
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent,
with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]
 

Constraints:

n == nums.length
1 <= n <= 300
nums[i] is either 0, 1, or 2.
 

Follow up: Could you come up with a one-pass algorithm using only constant extra space?

Accepted
1.6M
Submissions
2.6M
Acceptance Rate
60.2%






class Solution {
    public void sortColors(int[] nums) {
        Sorting_Linear_Time(nums);
    }
    public static int Sorting_Linear_Time(int[] arr) {
		int left = 0;
		int right = arr.length - 1;
		int mid = 0;
		while (mid <= right) {
			if (arr[mid] == 2) {
				int t = arr[right];
				arr[right] = arr[mid];
				arr[mid] = t;
				right--;
			} else if (arr[mid] == 0) {
				int t = arr[left];
				arr[left] = arr[mid];
				arr[mid] = t;
				left++;
                mid++;
			} else {
				mid++;
			}

		}
		return -1;
	}
}
