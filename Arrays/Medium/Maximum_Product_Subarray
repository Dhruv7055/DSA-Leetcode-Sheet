152. Maximum Product Subarray
Medium
16.7K
511
Companies
Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
 

Constraints:

1 <= nums.length <= 2 * 104
-10 <= nums[i] <= 10
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
Accepted
1M
Submissions
3M
Acceptance Rate
34.9%








class Solution {
    public int maxProduct(int[] nums) {
        return kedane(nums);
    }
    public static int kedane(int [] arr) {
		int ans = Integer.MIN_VALUE;
		int prefix = 1;
		int suffix = 1;
		for(int i = 0 ; i < arr.length; i++) {
			if(prefix == 0) prefix = 1; // calculating product from iterating the array from begining
			if(suffix == 0) suffix = 1; // calculating product from iterating the array from end
			prefix = prefix * arr[i];
			suffix = suffix * arr[arr.length-i-1];
			ans = (int)Math.max(ans, (int)Math.max(prefix, suffix));
			
		}
		return ans;
	}
}
