119. Pascal's Triangle II
Easy
3.9K
306
Companies
Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:


 

Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]
Example 2:

Input: rowIndex = 0
Output: [1]
Example 3:

Input: rowIndex = 1
Output: [1,1]
 

Constraints:

0 <= rowIndex <= 33
 

Follow up: Could you optimize your algorithm to use only O(rowIndex) extra space?

Accepted
699.7K
Submissions
1.1M
Acceptance Rate
61.3%


class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> list = new ArrayList<>();
        if(rowIndex < 0) return list;
        list.add(1);
        for(int i = 1; i <= rowIndex; i++){
            for(int j = list.size()-1; j > 0; j--){
                list.set(j, list.get(j) + list.get(j-1));
            }
            list.add(1);
        }
        return list;
    }
}
